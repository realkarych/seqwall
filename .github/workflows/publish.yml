name: Publish Go Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Set up Go
        uses: actions/setup-go@v5.4.0
        with:
          go-version: '1.22'

      - name: Extract tag
        id: tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >>"$GITHUB_OUTPUT"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          mkdir -p dist
          BIN="seqwall"
          [ "$GOOS" = "windows" ] && BIN="${BIN}.exe"
          go build -ldflags="-s -w" -o "dist/${BIN}" .

      - name: Archive binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          TAG: ${{ steps.tag.outputs.TAG }}
        run: |
          cd dist
          ARCHIVE_PREFIX="${TAG}_seqwall_${GOOS}_${GOARCH}"
          if [ "$GOOS" = "windows" ]; then
            zip "${ARCHIVE_PREFIX}.zip" "seqwall.exe"
          else
            tar -czf "${ARCHIVE_PREFIX}.tar.gz" "seqwall"
          fi

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v2.2.2
        with:
          tag_name: ${{ steps.tag.outputs.TAG }}
          name: ${{ steps.tag.outputs.TAG }}
          files: |
            dist/*.tar.gz
            dist/*.zip
          fail_on_unmatched_files: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
